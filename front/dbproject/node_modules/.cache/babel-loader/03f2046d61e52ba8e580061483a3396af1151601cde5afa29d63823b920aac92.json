{"ast":null,"code":"import WebSocket from 'ws';\nexport default {\n  data() {\n    return {\n      url: 'ws://localhost:7078/Room/',\n      ws: null,\n      user: '',\n      message: '',\n      content: ''\n    };\n  },\n  created() {},\n  methods: {\n    async joinRoom() {\n      if (this.ws) {\n        alert(\"你已经再聊天室\");\n        return;\n      }\n      let url = this.url;\n      let username = this.user;\n      this.ws = new WebSocket('wss://localhost:7078/Room/' + username); // 后端的启动端口\n      this.ws.onopen = this.webscoketonopen;\n      this.ws.onmessage = this.webscoketonmessage;\n      //发生错误触发\n      this.ws.onerror = function (event) {\n        console.log(\"连接错误\" + event);\n      };\n      //正常关闭触发\n      this.ws.onclose = function () {\n        console.log(\"连接关闭\");\n      };\n    },\n    webscoketonopen() {\n      console.log(\"与服务器成功建立连接\");\n    },\n    webscoketonmessage(value) {\n      console.log(value);\n      this.content += value.data + '\\r\\n';\n    },\n    exitRoom() {\n      this.closeWebSocket();\n    },\n    sendMsg() {\n      if (!this.ws) {\n        alert('你已经掉线，请重新加入');\n        return;\n      }\n      if (this.ws.readyState === 1) {\n        this.ws.send(this.message);\n        this.message = '';\n      } else {\n        alert('发送失败');\n      }\n    },\n    closeWebSocket() {\n      if (this.ws) {\n        this.ws.close();\n        this.ws = null;\n      }\n    },\n    talking(content) {\n      console.log(content);\n    }\n  }\n};","map":{"version":3,"names":["WebSocket","data","url","ws","user","message","content","created","methods","joinRoom","alert","username","onopen","webscoketonopen","onmessage","webscoketonmessage","onerror","event","console","log","onclose","value","exitRoom","closeWebSocket","sendMsg","readyState","send","close","talking"],"sources":["D:\\Work\\大三上\\java\\endOfTermProj\\Java-EE-Police-Affair-System\\front\\dbproject\\src\\components\\SecretChat.vue"],"sourcesContent":["<template>\n    <el-header class=\"sub-header\" @mousemove=\"handleMouseMove\">\n      <div>&nbsp;&nbsp;行动交流</div>\n    </el-header>\n  <div class=\"container\" @wheel.passive.stop>\n  <div class=\"ssqtitletest\"><span>火&nbsp;炬&nbsp;行&nbsp;动</span></div>\n  <div class=\"content\">\n    <div class=\"inputContainer\">\n    <div class=\"cpbutton\" style=\"background-color: #033fc1;color:rgb(255, 255, 255);display: inline-block;width:15%;\"><span>用户：</span></div>\n    <input class=\"input\" style=\"margin-left: 15px;display: inline-block;width:40%;\" type=\"text\" v-model=\"user\">\n    <button class=\"cpbutton\" style=\"display: inline-block;width:15%;margin-left: 15px;\" @click=\"joinRoom()\"><span>加入群聊</span></button>\n    <button class=\"cpbutton\" style=\"display: inline-block;width:15%;margin-left: 15px;\" @click=\"exitRoom()\"><span>退出群聊</span></button>\n  </div>\n  <textarea id=\"content\" v-model=\"content\" cols=\"60\" rows=\"30\" readonly=\"readonly\" class=\"myTextStyle\"></textarea><br>\n  <div class=\"inputContainer\">\n    <input class=\"input\" type=\"text\" v-model=\"message\">\n    <button class=\"cpbutton\" style=\"display: inline-block;width:15%;margin-left: 15px;\" type=\"button\" @click=\"sendMsg()\"><span>发送消息</span></button>\n  </div>\n  </div>\n  </div>\n</template>\n<script>\nimport WebSocket from 'ws';\nexport default {\ndata() {\n  return {\n    url: 'ws://localhost:7078/Room/',\n    ws: null,\n    user: '',\n    message: '',\n    content: '',\n  }\n},\ncreated(){\n},\nmethods: {\n  async joinRoom(){\n    if(this.ws) {\n      alert(\"你已经再聊天室\");\n      return;\n    }\n    let url = this.url;\n    let username = this.user;\n    this.ws = new WebSocket('wss://localhost:7078/Room/' + username);  // 后端的启动端口\n    this.ws.onopen = this.webscoketonopen;\n    this.ws.onmessage =  this.webscoketonmessage;\n    //发生错误触发\n    this.ws.onerror = function (event) {\n      console.log(\"连接错误\"+event)\n    };\n    //正常关闭触发\n    this.ws.onclose = function () {\n      console.log(\"连接关闭\");\n    };\n  }, \n  webscoketonopen(){\n    console.log(\"与服务器成功建立连接\");\n  },\n  webscoketonmessage(value){\n    console.log(value);\n    this.content += (value.data + '\\r\\n') ;\n  },\n  exitRoom(){\n    this.closeWebSocket();\n  },\n  sendMsg(){\n    if(!this.ws) {\n      alert('你已经掉线，请重新加入');\n      return;\n    }\n    if(this.ws.readyState === 1){\n      this.ws.send(this.message);\n      this.message = '';\n    } else {\n      alert('发送失败');\n    }\n  },\n  closeWebSocket(){\n    if(this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  },\n  talking(content) {\n    console.log(content);\n  }\n}\n}\n</script>\n<style scoped>\n .sub-header {\n    overflow: hidden;\n    display: flex;\n    position: absolute;\n    top: 70px;\n    left: 199px;\n    width: calc(100% - 199px);\n    height: 7vh;\n    min-height: 40px;\n    align-items: center; /* 文字竖直方向居中对齐 */\n    background-color: #1f2cdf;\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\n    color: #ffffff;\n    font-size: 28px;\n  }\n  .container {\n    /* width: 80vw;\n    height: 130vh;  /* width: 80vw;\n    height: 130vh; */\n    /* background-color: #f4f6f9; */\n    margin-top:5vh;\n    min-width: 700px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n.content {\n    width: 50%;\n    min-width: 1000px;\n    position: relative;\n    box-shadow: 0px 0px 10px 2px rgba(123, 103, 75, 0.427);\n    background-color: rgba(255, 255, 255, 0.616); \n    margin-bottom: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: 16px;\n    padding: 16px;\n    border-radius: 5px;\n    box-shadow: #9a9a9a 0px 0px 6px;\n    box-shadow: #777777 0px 0px 3px;\n    border-top: #0051ff 3px solid;\n    border-top: solid 3px transparent;\n  }\n  \n  .content:hover {\n    border-top-color: #0051ff;\n  }\n  \n  .content {\n    transition: border-top-color 0.3s;\n  }\n  \n  .content:hover {\n    transition: border-top-color 0.3s;\n  }\n.roomStyle{\ntext-align: center;\nbackground-color: #e6dbc1;\nmargin: 0 auto;\nborder: 1px solid #000;\nwidth: 800px;\nheight: 650px\n}\n.myTextStyle{\n  width: 700px;\n  height:300px;\n}\n.ssqtitletest {\n    margin:10px auto;\n    min-width:1000px;\n    height:40px;\n    padding:0 30px;\n    line-height: 45px;\n    text-align: center;\n    position: relative;\n    appearance: none;\n    background: #0135a4;\n\n    border: none;\n    color: white;\n    font-size: 25px;\n    outline: none;\n    overflow: hidden;\n    border-radius: 0px;\n  }\n  \n  .input {\n    width: 70%;\n    height: 30px;\n    display:inline-block;\n    outline: none;\n    border: 1px solid #e3e3e3;\n    border-radius: 2px;\n    box-shadow: #b4a078 0px 0px 2px;\n    font-size: 14px;\n    padding: 6px;\n    display: inline-block;\n  \n    transition: border-color 0.2s ease-in-out;\n    transition: box-shadow 0.2s ease-in-out;\n  }\n  .input:focus {\n    outline: none;\n    border-color: #6777ef;\n    box-shadow: #3d4cc1 0px 0px 2px;\n  }\n\n  input:not(:focus) + .ssqpoptip {\n    transform: scale(0);\n    animation: elastic-dec .25s;\n  }\n\n  input:focus + .ssqpoptip {\n    transform: scale(1);\n    animation: elastic-grow .45s;\n  }\n  .inputContainer {\n    width: 61%;\n    height: 60px;\n    display: inline-block;\n    flex-direction: column;\n    justify-content: flex-start;\n    margin: 6px;\n  }\n  \n.cpbutton {\n    margin-left:5px;\n    margin-top:5px;\n    bottom: -6px;\n    width:50px;\n    height:30px;\n    padding:0 10px;\n    line-height: 40px;\n    text-align: center;\n    position: relative;\n    appearance: none;\n    background: #033fc1;\n    border: none;\n    color: white;\n    font-size: 15px;\n    cursor: pointer;\n    outline: none;\n    overflow: hidden;\n    border-radius: 6px;\n    display: block;\n  }\n\n  .cpbutton span {\n    position: relative;\n    top: -20%;\n  }\n\n  .cpbutton::before {\n    --size: 0;\n    content: '';\n    position: absolute;\n    left: var(--x);\n    top: var(--y);\n    width: var(--size);\n    height: var(--size);\n    background: radial-gradient(circle closest-side, #e8e0cfa7, transparent);\n    transform: translate(-50%, -50%);\n    transition: width .2s ease, height .2s ease;\n  }\n\n  .cpbutton:hover::before {\n    --size: 400px;\n  }\n\n</style>"],"mappings":"AAsBA,OAAOA,SAAQ,MAAO,IAAI;AAC1B,eAAe;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,2BAA2B;MAChCC,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE,CACT,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAE;MACd,IAAG,IAAI,CAACN,EAAE,EAAE;QACVO,KAAK,CAAC,SAAS,CAAC;QAChB;MACF;MACA,IAAIR,GAAE,GAAI,IAAI,CAACA,GAAG;MAClB,IAAIS,QAAO,GAAI,IAAI,CAACP,IAAI;MACxB,IAAI,CAACD,EAAC,GAAI,IAAIH,SAAS,CAAC,4BAA2B,GAAIW,QAAQ,CAAC,EAAG;MACnE,IAAI,CAACR,EAAE,CAACS,MAAK,GAAI,IAAI,CAACC,eAAe;MACrC,IAAI,CAACV,EAAE,CAACW,SAAQ,GAAK,IAAI,CAACC,kBAAkB;MAC5C;MACA,IAAI,CAACZ,EAAE,CAACa,OAAM,GAAI,UAAUC,KAAK,EAAE;QACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,GAACF,KAAK;MAC1B,CAAC;MACD;MACA,IAAI,CAACd,EAAE,CAACiB,OAAM,GAAI,YAAY;QAC5BF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACrB,CAAC;IACH,CAAC;IACDN,eAAeA,CAAA,EAAE;MACfK,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC;IACDJ,kBAAkBA,CAACM,KAAK,EAAC;MACvBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClB,IAAI,CAACf,OAAM,IAAMe,KAAK,CAACpB,IAAG,GAAI,MAAM;IACtC,CAAC;IACDqB,QAAQA,CAAA,EAAE;MACR,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB,CAAC;IACDC,OAAOA,CAAA,EAAE;MACP,IAAG,CAAC,IAAI,CAACrB,EAAE,EAAE;QACXO,KAAK,CAAC,aAAa,CAAC;QACpB;MACF;MACA,IAAG,IAAI,CAACP,EAAE,CAACsB,UAAS,KAAM,CAAC,EAAC;QAC1B,IAAI,CAACtB,EAAE,CAACuB,IAAI,CAAC,IAAI,CAACrB,OAAO,CAAC;QAC1B,IAAI,CAACA,OAAM,GAAI,EAAE;MACnB,OAAO;QACLK,KAAK,CAAC,MAAM,CAAC;MACf;IACF,CAAC;IACDa,cAAcA,CAAA,EAAE;MACd,IAAG,IAAI,CAACpB,EAAE,EAAE;QACV,IAAI,CAACA,EAAE,CAACwB,KAAK,CAAC,CAAC;QACf,IAAI,CAACxB,EAAC,GAAI,IAAI;MAChB;IACF,CAAC;IACDyB,OAAOA,CAACtB,OAAO,EAAE;MACfY,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;IACtB;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}