{"ast":null,"code":"import axios from 'axios';\nimport Chart from 'chart.js/auto';\nexport default {\n  data() {\n    return {\n      total: '',\n      result: '',\n      usingTime1: '',\n      usingTime2: '',\n      title: '',\n      director: '',\n      actor: '',\n      catalog: '',\n      score: ''\n    };\n  },\n  mounted() {\n    // 在这里初始化并渲染柱状图\n    this.renderBarChart();\n  },\n  methods: {\n    renderBarChart() {\n      // 获取 DOM 中的 div 元素，用于放置柱状图\n      const ctx = document.getElementById('bar-chart').getContext('2d');\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n\n      // 使用 Chart.js 创建柱状图\n      this.chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['MySQL', 'Hive'],\n          datasets: [{\n            label: '时间使用情况',\n            data: [parseInt(this.usingTime1), parseInt(this.usingTime2)],\n            // 将字符串转为数字\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          // 自适应大小\n          maintainAspectRatio: false,\n          // 不保持宽高比\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    },\n    formatDate(year, month, day) {\n      let formattedDate = '';\n      if (year) {\n        if (month && day && month !== '0' && day !== '0') {\n          const date = new Date(year, month - 1, day);\n          const options = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          };\n          formattedDate = date.toLocaleDateString('en-US', options);\n        } else {\n          formattedDate = year;\n        }\n      }\n      return formattedDate;\n    },\n    searchByMovieInfo() {\n      var startTime1 = new Date();\n      axios.get('http://localhost:7078/movie/allInfo?title=' + this.title + '&director=' + this.director + '&actor=' + this.actor + '&catalog=' + this.catalog + '&score=' + this.score).then(response => {\n        this.usingTime1 = new Date() - startTime1 + 'ms';\n        this.total = response.data.length;\n        if (response.data.length > 20) {\n          this.result = response.data.slice(0, 20);\n        } else if (response.data.length == 0) {\n          console.log('数据为空');\n          this.result = []; // 重置结果数据\n          return; // 返回，结束函数的执行\n        } else {\n          this.result = response.data;\n          console.log(\"总数\");\n          console.log(this.total);\n        }\n        var startTime2 = new Date();\n        axios.get('http://localhost:7079/movie/allInfo?title=' + this.title + '&director=' + this.director + '&actor=' + this.actor + '&catalog=' + this.catalog + '&score=' + this.score).then(response => {\n          this.usingTime2 = new Date() - startTime2 + 'ms';\n        });\n      });\n      this.$forceUpdate();\n      this.renderBarChart();\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","data","total","result","usingTime1","usingTime2","title","director","actor","catalog","score","mounted","renderBarChart","methods","ctx","document","getElementById","getContext","chartInstance","destroy","type","labels","datasets","label","parseInt","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","formatDate","year","month","day","formattedDate","date","Date","toLocaleDateString","searchByMovieInfo","startTime1","get","then","response","length","slice","console","log","startTime2","$forceUpdate"],"sources":["D:\\Work\\大三上\\数据仓库\\期末\\git11\\DW-2023-project\\front\\dbproject\\src\\components\\TestSearchMovie.vue"],"sourcesContent":["<template>\r\n    <!------------ 电影名 -------------->\r\n    <div class=\"content\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">电影名查询 <small>根据电影名查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">产品查询-输入电影名查询所有版本</span>\r\n        <el-input v-model=\"title\" placeholder=\"请输入电影名\"></el-input>>\r\n    </div>\r\n\r\n    <!------------ 导演名 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">导演查询 <small>根据导演查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"searchmethod\">导演查询-输入导演查询所有导演电影</span>\r\n        <el-input v-model=\"director\" placeholder=\"请输入导演\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 演员名 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">演员查询 <small>根据演员查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">演员查询-输入演员查询所有参演电影</span>\r\n          <el-input v-model=\"actor\" placeholder=\"请输入演员\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 电影分类 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">分类查询 <small>根据分类查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"searchmethod\">分类查询-输入要查询的电影分类</span>\r\n        <el-input v-model=\"catalog\" placeholder=\"请输入分类\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 评论 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">评论查询 <small>根据评论与评分查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">评分查询-输入要查询的评分下限</span>\r\n        <el-input v-model=\"score\" placeholder=\"请输入评分\"></el-input>\r\n    </div>\r\n    <el-button @click=\"searchByMovieInfo\">总查询测试</el-button>\r\n\r\n    <div class=\"chart-container\">\r\n  <canvas id=\"bar-chart\" width=\"400\" height=\"400\"></canvas>\r\n</div>\r\n\r\n    <el-card class=\"box-card\">\r\n        <div slot=\"header\">\r\n            <span>总数： {{ total }}</span>\r\n        </div>\r\n        \r\n        <div slot=\"header\">\r\n            <span>MySQL查询用时： {{ usingTime1 }}</span>\r\n        </div>\r\n        <div slot=\"header\">\r\n            <span>Hive查询用时： {{ usingTime2 }}</span>\r\n        </div>\r\n        <div>\r\n            <span>详情：</span>\r\n        </div>\r\n        <div>\r\n            <el-table class=\"dataTable\" ref=\"multipleTable\" :data=\"result\">\r\n              <el-table-column label=\"电影名\" prop=\"title\"></el-table-column>\r\n              <el-table-column label=\"导演\" prop=\"director\"></el-table-column>\r\n              <el-table-column label=\"演员\" prop=\"actor\"></el-table-column>\r\n              <el-table-column label=\"上映时间\">\r\n                  <template v-slot=\"{ row }\">\r\n                    <span v-if=\"row.year && row.month && row.day\">\r\n                      {{ formatDate(row.year, row.month, row.day) }}\r\n                    </span>\r\n                    <span v-else>-</span>\r\n                  </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"时长\" prop=\"runtime\"></el-table-column>\r\n              <el-table-column label=\"类别\" prop=\"catalog\"></el-table-column>\r\n              <el-table-column label=\"评分\" prop=\"score\"></el-table-column>\r\n          </el-table>\r\n          </div>\r\n        </el-card>\r\n\r\n\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto'; \r\nexport default {\r\n  data () {\r\n    return {\r\n      total: '',\r\n      result: '',\r\n      usingTime1: '',\r\n      usingTime2: '',\r\n      title: '',\r\n      director: '',\r\n      actor: '',\r\n      catalog: '',\r\n      score: '',\r\n    }\r\n  },\r\n  mounted() {\r\n        // 在这里初始化并渲染柱状图\r\n        this.renderBarChart();\r\n  },\r\n  methods: {\r\n    renderBarChart() {\r\n        // 获取 DOM 中的 div 元素，用于放置柱状图\r\n        const ctx = document.getElementById('bar-chart').getContext('2d');\r\n\r\n        if (this.chartInstance) {\r\n            this.chartInstance.destroy();\r\n        }\r\n\r\n        // 使用 Chart.js 创建柱状图\r\n        this.chartInstance = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: ['MySQL', 'Hive'],\r\n            datasets: [{\r\n            label: '时间使用情况',\r\n            data: [parseInt(this.usingTime1), parseInt(this.usingTime2)], // 将字符串转为数字\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n            }],\r\n        },\r\n        options: {\r\n            responsive: true, // 自适应大小\r\n            maintainAspectRatio: false, // 不保持宽高比\r\n            scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n            },\r\n            },\r\n        },\r\n    });\r\n  },\r\n    formatDate(year, month, day) {\r\n      let formattedDate = '';\r\n      if (year) {\r\n        if (month && day && month !== '0' && day !== '0') {\r\n          const date = new Date(year, month - 1, day);\r\n          const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n          formattedDate = date.toLocaleDateString('en-US', options);\r\n        } else {\r\n          formattedDate = year;\r\n        }\r\n      }\r\n      return formattedDate;\r\n    },\r\n    searchByMovieInfo(){\r\n        var startTime1 = new Date();\r\n        axios.get('http://localhost:7078/movie/allInfo?title='+ this.title+'&director='+this.director+'&actor='+this.actor+'&catalog='+this.catalog+'&score='+this.score)\r\n        .then(response => {\r\n        this.usingTime1 = new Date() - startTime1 + 'ms';\r\n        this.total=response.data.length;\r\n        if (response.data.length > 20) {\r\n          \r\n          this.result = response.data.slice(0, 20);\r\n        }\r\n        else if(response.data.length == 0){\r\n          console.log('数据为空');\r\n          this.result = []; // 重置结果数据\r\n          return; // 返回，结束函数的执行\r\n        }\r\n        else{\r\n          this.result = response.data;\r\n          console.log(\"总数\")\r\n          console.log(this.total);\r\n        }\r\n        var startTime2 = new Date();\r\n          axios.get('http://localhost:7079/movie/allInfo?title='+ this.title+'&director='+this.director+'&actor='+this.actor+'&catalog='+this.catalog+'&score='+this.score)\r\n          .then(response => {\r\n            this.usingTime2 = new Date() - startTime2 + 'ms';\r\n          });\r\n       \r\n      });\r\n      this.$forceUpdate();\r\n      this.renderBarChart();\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .chart-container {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n.page-header .title {\r\n  text-align: center;\r\n}\r\n.text {\r\n  font-size: 14px;\r\n}\r\n.item {\r\n  margin-bottom: 18px;\r\n}\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: '';\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n.box-card {\r\n    width: 100%;\r\n}\r\n.block {\r\n  width:400px;\r\n}\r\n.searchmethod{\r\n    display:block;\r\n  }\r\n.content {\r\n    width: 80%;\r\n    position: relative;\r\n    box-shadow: 0px 0px 10px 2px rgba(123, 103, 75, 0.427);\r\n    background-color: rgba(255, 255, 255, 0.616); \r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-top: 16px;\r\n    padding: 16px;\r\n  \r\n    border-radius: 5px;\r\n    box-shadow: #9a9a9a 0px 0px 6px;\r\n    box-shadow: #777777 0px 0px 3px;\r\n    border-top: #0051ff 3px solid;\r\n    border-top: solid 3px transparent;\r\n  }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}