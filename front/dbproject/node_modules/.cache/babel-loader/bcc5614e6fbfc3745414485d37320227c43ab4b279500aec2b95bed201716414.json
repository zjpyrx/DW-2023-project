{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      total: '',\n      result: '',\n      usingTime1: '',\n      usingTime2: '',\n      title: '',\n      director: '',\n      actor: '',\n      catalog: '',\n      score: ''\n    };\n  },\n  methods: {\n    formatDate(year, month, day) {\n      console.log(year);\n      console.log(month);\n      console.log(day);\n      let formattedDate = '';\n      if (year && month && day) {\n        const date = new Date(year, month - 1, day);\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        };\n        formattedDate = date.toLocaleDateString('en-US', options);\n      }\n      return formattedDate;\n    },\n    searchByMovieInfo() {\n      var startTime1 = new Date();\n      axios.get('http://localhost:7078/movie/allInfo?title=' + this.title + '&director=' + this.director + '&actor=' + this.actor + '&catalog=' + this.catalog + '&score=' + this.score).then(response => {\n        this.usingTime1 = new Date() - startTime1 + 'ms';\n        this.result = response.data;\n      });\n      console.log(this.result.length);\n      // 检查数据是否为空\n      if (this.result.length == 0) {\n        // 数据为空时执行特定的操作，例如显示错误消息或重置数据\n        console.log('数据为空');\n        this.total = '0';\n        this.result = []; // 重置结果数据\n        return; // 返回，结束函数的执行\n      } else {\n        this.total = this.result.length;\n        console.log(\"总数\");\n        console.log(this.total);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","total","result","usingTime1","usingTime2","title","director","actor","catalog","score","methods","formatDate","year","month","day","console","log","formattedDate","date","Date","options","toLocaleDateString","searchByMovieInfo","startTime1","get","then","response","length"],"sources":["D:\\Work\\大三上\\数据仓库\\期末\\git11\\DW-2023-project\\front\\dbproject\\src\\components\\SearchMovie.vue"],"sourcesContent":["<template>\r\n    <!------------ 电影名 -------------->\r\n    <div class=\"content\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">电影名查询 <small>根据电影名查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">产品查询-输入电影名查询所有版本</span>\r\n        <el-input v-model=\"title\" placeholder=\"请输入电影名\"></el-input>>\r\n    </div>\r\n\r\n    <!------------ 导演名 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">导演查询 <small>根据导演查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"searchmethod\">导演查询-输入导演查询所有导演电影</span>\r\n        <el-input v-model=\"director\" placeholder=\"请输入导演\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 演员名 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">演员查询 <small>根据演员查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">演员查询-输入演员查询所有参演电影</span>\r\n          <el-input v-model=\"actor\" placeholder=\"请输入演员\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 电影分类 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">分类查询 <small>根据分类查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"searchmethod\">分类查询-输入要查询的电影分类</span>\r\n        <el-input v-model=\"catalog\" placeholder=\"请输入分类\"></el-input>\r\n    </div>\r\n\r\n    <!------------ 评论 -------------->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"title\">评论查询 <small>根据评论与评分查询</small></h1>\r\n    </div>\r\n    <div class=\"block\">\r\n        <span class=\"demonstration\">评分查询-输入要查询的评分下限</span>\r\n        <el-input v-model=\"score\" placeholder=\"请输入评分\"></el-input>\r\n    </div>\r\n    <el-button @click=\"searchByMovieInfo\">总查询测试</el-button>\r\n\r\n\r\n\r\n    <el-card class=\"box-card\">\r\n        <div slot=\"header\">\r\n            <span>总数： {{ total }}</span>\r\n        </div>\r\n        <div slot=\"header\">\r\n            <span>统计查询用时： {{ usingTime2 }}</span>\r\n        </div>\r\n        <div slot=\"header\">\r\n            <span>详情示例用时： {{ usingTime1 }}</span>\r\n        </div>\r\n        <div>\r\n            <span>详情：</span>\r\n        </div>\r\n        <div>\r\n            <el-table class=\"dataTable\" ref=\"multipleTable\" :data=\"result\">\r\n              <el-table-column label=\"电影名\" prop=\"title\"></el-table-column>\r\n              <el-table-column label=\"导演\" prop=\"director\"></el-table-column>\r\n              <el-table-column label=\"演员\" prop=\"actor\"></el-table-column>\r\n              <el-table-column label=\"上映时间\">\r\n                  <template v-slot=\"{ row }\">\r\n                    <span v-if=\"row.year && row.month && row.day\">\r\n                      {{ formatDate(row.year, row.month, row.day) }}\r\n                    </span>\r\n                    <span v-else>-</span>\r\n                  </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"时长\" prop=\"runtime\"></el-table-column>\r\n              <el-table-column label=\"类别\" prop=\"catalog\"></el-table-column>\r\n              <el-table-column label=\"评分\" prop=\"score\"></el-table-column>\r\n          </el-table>\r\n          </div>\r\n        </el-card>\r\n\r\n\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data () {\r\n    return {\r\n      total: '',\r\n      result: '',\r\n      usingTime1: '',\r\n      usingTime2: '',\r\n      title: '',\r\n      director: '',\r\n      actor: '',\r\n      catalog: '',\r\n      score: '',\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(year, month, day) {\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(day);\r\n        let formattedDate = '';\r\n        if (year && month && day) {\r\n          const date = new Date(year, month - 1, day);\r\n          const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n          formattedDate = date.toLocaleDateString('en-US', options);\r\n        }\r\n        return formattedDate;\r\n      },\r\n    searchByMovieInfo(){\r\n        var startTime1 = new Date();\r\n        axios.get('http://localhost:7078/movie/allInfo?title='+ this.title+'&director='+this.director+'&actor='+this.actor+'&catalog='+this.catalog+'&score='+this.score)\r\n        .then(response => {\r\n        this.usingTime1 = new Date() - startTime1 + 'ms';\r\n        this.result = response.data;});\r\n        console.log(this.result.length);\r\n        // 检查数据是否为空\r\n        if (this.result.length == 0) {\r\n        // 数据为空时执行特定的操作，例如显示错误消息或重置数据\r\n          console.log('数据为空');\r\n          this.total='0';\r\n          this.result = []; // 重置结果数据\r\n          return; // 返回，结束函数的执行\r\n        }\r\n        else{\r\n          this.total=this.result.length;\r\n          console.log(\"总数\")\r\n          console.log(this.total);\r\n        }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header .title {\r\n  text-align: center;\r\n}\r\n.text {\r\n  font-size: 14px;\r\n}\r\n.item {\r\n  margin-bottom: 18px;\r\n}\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: '';\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n.box-card {\r\n    width: 100%;\r\n}\r\n.block {\r\n  width:400px;\r\n}\r\n.searchmethod{\r\n    display:block;\r\n  }\r\n.content {\r\n    width: 80%;\r\n    position: relative;\r\n    box-shadow: 0px 0px 10px 2px rgba(123, 103, 75, 0.427);\r\n    background-color: rgba(255, 255, 255, 0.616); \r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-top: 16px;\r\n    padding: 16px;\r\n  \r\n    border-radius: 5px;\r\n    box-shadow: #9a9a9a 0px 0px 6px;\r\n    box-shadow: #777777 0px 0px 3px;\r\n    border-top: #0051ff 3px solid;\r\n    border-top: solid 3px transparent;\r\n  }\r\n</style>\r\n"],"mappings":"AAwFA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;MACzBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjBG,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAIG,aAAY,GAAI,EAAE;MACtB,IAAIL,IAAG,IAAKC,KAAI,IAAKC,GAAG,EAAE;QACxB,MAAMI,IAAG,GAAI,IAAIC,IAAI,CAACP,IAAI,EAAEC,KAAI,GAAI,CAAC,EAAEC,GAAG,CAAC;QAC3C,MAAMM,OAAM,GAAI;UAAER,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,SAAS;UAAEC,GAAG,EAAE;QAAU,CAAC;QACrEG,aAAY,GAAIC,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAED,OAAO,CAAC;MAC3D;MACA,OAAOH,aAAa;IACtB,CAAC;IACHK,iBAAiBA,CAAA,EAAE;MACf,IAAIC,UAAS,GAAI,IAAIJ,IAAI,CAAC,CAAC;MAC3BpB,KAAK,CAACyB,GAAG,CAAC,4CAA4C,GAAE,IAAI,CAACnB,KAAK,GAAC,YAAY,GAAC,IAAI,CAACC,QAAQ,GAAC,SAAS,GAAC,IAAI,CAACC,KAAK,GAAC,WAAW,GAAC,IAAI,CAACC,OAAO,GAAC,SAAS,GAAC,IAAI,CAACC,KAAK,EAC/JgB,IAAI,CAACC,QAAO,IAAK;QAClB,IAAI,CAACvB,UAAS,GAAI,IAAIgB,IAAI,CAAC,IAAII,UAAS,GAAI,IAAI;QAChD,IAAI,CAACrB,MAAK,GAAIwB,QAAQ,CAAC1B,IAAI;MAAC,CAAC,CAAC;MAC9Be,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,MAAM,CAACyB,MAAM,CAAC;MAC/B;MACA,IAAI,IAAI,CAACzB,MAAM,CAACyB,MAAK,IAAK,CAAC,EAAE;QAC7B;QACEZ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAACf,KAAK,GAAC,GAAG;QACd,IAAI,CAACC,MAAK,GAAI,EAAE,EAAE;QAClB,OAAM,CAAE;MACV,OACI;QACF,IAAI,CAACD,KAAK,GAAC,IAAI,CAACC,MAAM,CAACyB,MAAM;QAC7BZ,OAAO,CAACC,GAAG,CAAC,IAAI;QAChBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,KAAK,CAAC;MACzB;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}